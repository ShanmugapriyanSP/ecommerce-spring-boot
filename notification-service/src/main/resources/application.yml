spring:
  application:
    name: notification-service
  kafka:
    consumer:
      bootstrap-servers: http://127.0.0.1:9092
      group-id: orderId
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            type:
              mapping: event:com.ecommerce.notificationservice.event.OrderPlacedEvent
  mail:
    host: smtp.gmail.com
    port: 587
    username: spshanmugapriyan641@gmail.com
    password: xxx xxx xxx xxx
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

server:
  port: 0

eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka:password@localhost:8761/eureka
  instance:
    prefer-ip-address: true

logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

management:
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
  tracing:
    sampling:
      probability: 1.0
  endpoints:
      web:
        exposure:
          include: prometheus
